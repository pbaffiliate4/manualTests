 var scriptName='script_1';
 var stores = require("store");
 var pubsub = require("pubsub");
 var devices = require("device");
 var util = require("./util");
 function run(stopOnError, errorMessages){ 
 var parameters="";
 var response=""; 
parameters={"groupName":"deployment-execute"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "deployment-execute");
parameters={"groupName":"editor"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "editor");
parameters={"groupName":"hook-Write"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "hook-Write");
parameters={"groupName":"hook-write"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "hook-write");
parameters={"groupName":"list"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "list");
parameters={"groupName":"manage"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "manage");
parameters={"groupName":"mygroup"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "mygroup");
parameters={"groupName":"nameofgroup"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "nameofgroup");
parameters={"groupName":"script-execute"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "script-execute");
parameters={"groupName":"script-read"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "script-read");
parameters={"groupName":"script-write"};
util.callApi("SaveGroup", parameters, null, errorMessages, stopOnError, scriptName, "script-write");
 response =  stores.create("store",{"isStoreSearchable":"true"});
util.handleResponse(response, errorMessages, stopOnError, "stores.save", scriptName, "store");
util.callApi("SaveConfiguration", {"apsdb.sendEmailACL":"authenticated","apsdb.defaultResponseType":"JSON","apsdb.defaultRepositoryName":"manualTests","apsdb.defaultRepositoryOwner":"pbaffiliate4","apsdb.defaultRepositoryBranch":"master","apsdb.defaultRepositoryAccessToken":"de0d0e20d713787dd017439207d28ec15cbe7df5","apsdb.defaultReadACL":"scriptr","apsdb.listFilesACL":"nobody","apsdb.createFileACL":"group:nameofgroup;device1;device2","apsdb.saveChannelACL":"nobody","apsdb.disableSchemalessDocs":"true","apsdb.optionalBindReferrer":"false","apsdb.defaultTokenExpires":"1800","apsdb.maximumTokenExpires":"86400","apsdb.defaultTokenLifeTime":"7200","apsdb.maximumTokenLifeTime":"604800","apsdb.allowForce200ResponseStatus":"true","apsdb.useDeprecatedSocialApis":"false","apsdb.accessControlAllowOrigin":"*,https://www.scriptr.io,https://test.scriptr.io","apsdb.gitPurge":"true","apsdb.facebookConsumerKey":"341726685895718","apsdb.facebookConsumerSecret":"62d55f6f76433f42c644ef2e9caf91bf","apsdb.facebookAccessToken":"CAAE2zHG5HCYBAABjDQQZCfYyiMOpVa3c1j7InyOsr4CVkZCYCKj6jFInE068BpZCtNjfKbPagfBHll3dFUs4npkZCel7rrnZAzweZB3dMORYWAGslziZCDfuKp2e7BfYYfgY7zSpHOtGw5ETvSmTs4bgWR9bcIH2y154cGGfV996RQVKMCEipcRwGnbvPqYShOQYtxPsFGtVgZDZD","apsdb.twitterConsumerKey":"AFfFJiOyUNegXZv6vYbXQ","apsdb.twitterConsumerSecret":"m3Mhm3gIaVq4Cv1Ctpe4w8KWE7ZqLbmA6OXAoLn7aY","apsdb.twitterAccessToken":"437388913-B2gHjIZ6w3RNSuWa71BDG6vk9XK8vbS30hnnJzEM","apsdb.twitterAccessTokenSecret":"Y8SxgSGrKmLcxMOqBt0xcELpq0WIz164LksLb7Gesk","apsdb.defaultGitWebhookId":"73138355","apsdb.default403File":"default403page.js","apsdb.default404File":"editor/text","apsdb.customUnauthorizedErrorFile":"scriptName","apsdb.isQueuingEnabled":"true","apsdb.P3P":""}, null, errorMessages, stopOnError, scriptName, "");
util.callApi("SaveConfiguration", {"apsdb.DefaultStore.deleteDocumentACL":"anonymous","apsdb.DefaultStore.getFileACL":"authenticated","apsdb.DefaultStore.saveDocumentACL":"authenticated","apsdb.DefaultStore.queryACL":"authenticated"}, null, errorMessages, stopOnError, scriptName, "DefaultStore");
util.callApi("SaveConfiguration", {"apsdb.store.queryACL":"anonymous","apsdb.store.deleteDocumentACL":"anonymous","apsdb.store.saveDocumentACL":"anonymous","apsdb.store.getFileACL":"anonymous"}, null, errorMessages, stopOnError, scriptName, "store");
var channel_options={  "subscribeACL": "authenticated", "publishACL": "authenticated" }
response =  pubsub.createChannel("fashion",channel_options);
util.handleResponse(response, errorMessages, stopOnError, "pubsub.createChannel", scriptName, "fashion");
var channel_options={  "subscribeACL": "authenticated", "publishACL": "authenticated" }
response =  pubsub.createChannel("22",channel_options);
util.handleResponse(response, errorMessages, stopOnError, "pubsub.createChannel", scriptName, "22");
var channel_options={  "subscribeACL": "anonymous", "publishACL": "anonymous" }
response =  pubsub.createChannel("myaw2",channel_options);
util.handleResponse(response, errorMessages, stopOnError, "pubsub.createChannel", scriptName, "myaw2");
response =  pubsub.subscribe("myaw2","3aw","SCRIPT");
util.handleResponse(response, errorMessages, stopOnError, "pubsub.subscribe", scriptName, "myaw2_3aw");
var channel_options={  "subscribeACL": "anonymous", "publishACL": "anonymous" }
response =  pubsub.createChannel("aws-bridge-channel",channel_options);
util.handleResponse(response, errorMessages, stopOnError, "pubsub.createChannel", scriptName, "aws-bridge-channel");
var channel_options={  "subscribeACL": "anonymous", "publishACL": "anonymous" }
response =  pubsub.createChannel("TestBridgesChannel",channel_options);
util.handleResponse(response, errorMessages, stopOnError, "pubsub.createChannel", scriptName, "TestBridgesChannel");
var channel_options={  "subscribeACL": "anonymous", "publishACL": "anonymous" }
response =  pubsub.createChannel("requestChannel",channel_options);
util.handleResponse(response, errorMessages, stopOnError, "pubsub.createChannel", scriptName, "requestChannel");
var channel_options={  "subscribeACL": "anonymous", "publishACL": "anonymous" }
response =  pubsub.createChannel("news",channel_options);
util.handleResponse(response, errorMessages, stopOnError, "pubsub.createChannel", scriptName, "news");
response =  pubsub.subscribe("news","log","SCRIPT");
util.handleResponse(response, errorMessages, stopOnError, "pubsub.subscribe", scriptName, "news_log");
response =  pubsub.subscribe("news","ddd","SCRIPT");
util.handleResponse(response, errorMessages, stopOnError, "pubsub.subscribe", scriptName, "news_ddd");
response =  pubsub.subscribe("news","ascript","SCRIPT");
util.handleResponse(response, errorMessages, stopOnError, "pubsub.subscribe", scriptName, "news_ascript");
response =  pubsub.subscribe("news","myScript","SCRIPT");
util.handleResponse(response, errorMessages, stopOnError, "pubsub.subscribe", scriptName, "news_myScript");
response =  pubsub.subscribe("news","caro","SCRIPT");
util.handleResponse(response, errorMessages, stopOnError, "pubsub.subscribe", scriptName, "news_caro");
response =  pubsub.subscribe("news","test","SCRIPT");
util.handleResponse(response, errorMessages, stopOnError, "pubsub.subscribe", scriptName, "news_test");
response =  schedule("stephanie","0 27 13 14 4 ?");
util.handleResponse(response, errorMessages, stopOnError, "schedule", scriptName, "stephanie");
response =  schedule("wissam","0 * * * * ?");
util.handleResponse(response, errorMessages, stopOnError, "schedule", scriptName, "wissam");
response =  schedule("stephanie","0 27 13 14 4 ?");
util.handleResponse(response, errorMessages, stopOnError, "schedule", scriptName, "stephanie");
util.callApi("SaveUser", {"password":"fdfgd","name":"fgdfgdfg","id":"fdfgd"}, null, errorMessages, stopOnError, scriptName, "fdfgd");
util.callApi("SaveUser", {"password":"zz","name":"zz","id":"zz"}, null, errorMessages, stopOnError, scriptName, "zz");
util.callApi("SaveUser", {"password":"wa","name":"wa","id":"wa"}, null, errorMessages, stopOnError, scriptName, "wa");
util.callApi("SaveUser", {"password":"ww","name":"ww","id":"ww"}, null, errorMessages, stopOnError, scriptName, "ww");
util.callApi("SaveUser", {"password":"Dp","name":"Dp","id":"Dp"}, null, errorMessages, stopOnError, scriptName, "Dp");
util.callApi("SaveUser", {"password":"Da","name":"Da","id":"Da"}, null, errorMessages, stopOnError, scriptName, "Da");
util.callApi("SaveUser", {"password":"Dw","name":"Dw","id":"Dw"}, null, errorMessages, stopOnError, scriptName, "Dw");
util.callApi("SaveUser", {"password":"dw","name":"Dw","id":"dw"}, null, errorMessages, stopOnError, scriptName, "dw");
util.callApi("SaveUser", {"password":"hommos","name":"hommos","id":"hommos","email":"sdfjsdlkfjklsf@sdkfjslfkjsdf.com"}, null, errorMessages, stopOnError, scriptName, "hommos");
util.callApi("SaveUser", {"password":"doudou","name":"doudou","id":"doudou","email":"fgdfgkldjgkdfjg@dffjhdkjfhdfsdfsfksdhf.com"}, null, errorMessages, stopOnError, scriptName, "doudou");
util.callApi("SaveUser", {"password":"test123","name":"test123","id":"test123"}, null, errorMessages, stopOnError, scriptName, "test123");
response = devices.save({"password":"scriptr_GitHub.com","groups":["script-read","script-execute","deployment-execute"],"type":"application","name":"GitHub.com","id":"scriptr_GitHub.com"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "scriptr_GitHub.com");
response = devices.generateToken("scriptr_GitHub.com");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "scriptr_GitHub.com");
response = devices.save({"password":"dev2","name":"dev2","id":"dev2"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "dev2");
response = devices.generateToken("dev2");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "dev2");
response = devices.save({"password":"dev1","name":"dev1","id":"dev1"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "dev1");
response = devices.generateToken("dev1");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "dev1");
response = devices.save({"password":"moz","description":"ttt","groups":"list","name":"moz","id":"moz"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "moz");
response = devices.generateToken("moz");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "moz");
response = devices.save({"password":"newdev","description":"hgh","groups":"list","name":"newdev","id":"newdev"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "newdev");
response = devices.generateToken("newdev");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "newdev");
response = devices.save({"password":"popo","description":"sdf","groups":"list","name":"popo","id":"popo"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "popo");
response = devices.generateToken("popo");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "popo");
response = devices.save({"password":"dada","name":"dada","id":"dada"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "dada");
response = devices.generateToken("dada");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "dada");
response = devices.save({"password":"dddd","groups":"editor","name":"dddd","id":"dddd"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "dddd");
response = devices.generateToken("dddd");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "dddd");
response = devices.save({"password":"wsdev","isSuspended":"false","description":"Device description, I want to write something long and see how many lines would fit in the view mode of this device\n","groups":["hook-Write","script-execute","nameofgroup"],"name":"wsdev","id":"wsdev"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "wsdev");
response = devices.generateToken("wsdev");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "wsdev");
response = devices.save({"password":"gougou","description":"den","groups":["hook-Write","editor"],"name":"gougou","id":"gougou"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "gougou");
response = devices.generateToken("gougou");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "gougou");
response = devices.save({"password":"device1","description":"desc1","groups":["script-read","script-write","script-execute","manage","list","hook-write","hook-Write","nameofgroup","editor"],"name":"device1wwwwwwwwwwwww","id":"device1"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "device1");
response = devices.generateToken("device1");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "device1");
response = devices.save({"password":"device6","groups":"hook-Write","name":"device6","id":"device6"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "device6");
response = devices.generateToken("device6");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "device6");
response = devices.save({"password":"device9","groups":"hook-Write","name":"device9","id":"device9"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "device9");
response = devices.generateToken("device9");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "device9");
response = devices.save({"password":"device7","description":"desc1","groups":"hook-Write","name":"device7","id":"device7"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "device7");
response = devices.generateToken("device7");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "device7");
response = devices.save({"password":"device2","isSuspended":"false","description":"desc1","groups":["script-read","script-execute","list","hook-write","hook-Write","nameofgroup","editor"],"name":"device2","id":"device2"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "device2");
response = devices.generateToken("device2");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "device2");
response = devices.save({"password":"device3device3device3device3","isSuspended":"false","description":"What is Lorem Ipsum?\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the .","groups":["hook-write","script-read","script-write","script-execute","manage","list","hook-Write","nameofgroup"],"name":"device3device3device3device3","id":"device3device3device3device3"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "device3device3device3device3");
response = devices.generateToken("device3device3device3device3");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "device3device3device3device3");
response = devices.save({"password":"Device8","description":"desc1","groups":"hook-Write","name":"Device8","id":"Device8"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "Device8");
response = devices.generateToken("Device8");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "Device8");
response = devices.save({"password":"scriptr_bipio","groups":["script-read","script-write","script-execute","hook-write","hook-Write"],"type":"application","name":"bipio.cloud.wot.io","id":"scriptr_bipio"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "scriptr_bipio");
response = devices.generateToken("scriptr_bipio");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "scriptr_bipio");
response = devices.save({"password":"scriptr_demosbipio","groups":["script-read","script-write","script-execute","hook-Write"],"type":"application","name":"demos","id":"scriptr_demosbipio"});
util.handleResponse(response, errorMessages, stopOnError, "devices.save", scriptName, "scriptr_demosbipio");
response = devices.generateToken("scriptr_demosbipio");
util.handleResponse(response, errorMessages, stopOnError, "devices.generateToken", scriptName, "scriptr_demosbipio");
storage.global.scriptr={"karim@scriptr_dot_io":{"sessionData":{"lastName":"Saikali","updatedBy":"karim@scriptr.io","securityQuestion":"FIRST_JOB_CITY","@type":"user","timezone":"America/Los_Angeles","roles":["{@type=role, name=Admin, description=Role that has ability to perform administrative tasks for an organization.}","{@type=role, name=Designer, description=Role that has ability to design data service tasks.}"],"description":"Created from MarketPlace","updateTime":"2016-07-04T05:11:26.000Z","title":"CTO","uuid":"Iu8Dg2OsSnGnQ9S_v31B_Q","orgId":"0000F8","emails":"karim@scriptr.io","firstName":"Karim","password":"********","phone":"+1 (877) 7677587","createTime":"2016-02-19T00:31:33.000Z","createdBy":"System","icSessionId":"dAb6z2ZgpcMBizVx","serverUrl":"https://icinq1.informaticacloud.com/saas","name":"karim@scriptr.io","spiUrl":"https://bs1e1.rt.informaticacloud.com","forceChangePassword":"false","id":"0000F803000000000002"}}};
storage.global.whatever=["CHAJRA","BALLOUTA"];
 }
